<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="30" total="71" passed="40" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-15T19:15:26 IST" name="Art Gallery Testing" finished-at="2023-07-15T19:22:50 IST" duration-ms="444885">
    <groups>
      <group name="arttype">
        <method signature="ArtTypeTest.addArtTypeTest()[pri:9, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="addArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
        <method signature="ArtTypeTest.updateArtTypeTest()[pri:10, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="updateArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
        <method signature="ArtTypeTest.deleteArtTypeTest()[pri:11, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="deleteArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
      </group> <!-- arttype -->
      <group name="artist">
        <method signature="ArtistTest.addArtistTest()[pri:6, instance:TestCaseClasses.ArtistTest@61df66b6]" name="addArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtistTest.updateArtistTest()[pri:7, instance:TestCaseClasses.ArtistTest@61df66b6]" name="updateArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtistTest.deleteArtistTest()[pri:8, instance:TestCaseClasses.ArtistTest@61df66b6]" name="deleteArtistTest" class="TestCaseClasses.ArtistTest"/>
      </group> <!-- artist -->
      <group name="admin">
        <method signature="DashboardDetailsTest.artistDetails()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artistDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artTypeDetails()[pri:1, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artTypeDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artMediumDetails()[pri:2, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artMediumDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artProductDetails()[pri:3, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artProductDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.AnsweredEnquiryDetails()[pri:4, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="AnsweredEnquiryDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.UnansweredEnquiryDetails()[pri:5, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="UnansweredEnquiryDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="ArtistTest.addArtistTest()[pri:6, instance:TestCaseClasses.ArtistTest@61df66b6]" name="addArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtistTest.updateArtistTest()[pri:7, instance:TestCaseClasses.ArtistTest@61df66b6]" name="updateArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtistTest.deleteArtistTest()[pri:8, instance:TestCaseClasses.ArtistTest@61df66b6]" name="deleteArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtTypeTest.addArtTypeTest()[pri:9, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="addArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
        <method signature="ArtTypeTest.updateArtTypeTest()[pri:10, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="updateArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
        <method signature="ArtTypeTest.deleteArtTypeTest()[pri:11, instance:TestCaseClasses.ArtTypeTest@50eac852]" name="deleteArtTypeTest" class="TestCaseClasses.ArtTypeTest"/>
        <method signature="ArtMediumTest.addArtMediumTest()[pri:12, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="addArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtMediumTest.updateArtMediumTest()[pri:13, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="updateArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtMediumTest.deleteArtMediumTest()[pri:14, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="deleteArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtProductTest.addArtProductTest()[pri:15, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="addArtProductTest" class="TestCaseClasses.ArtProductTest"/>
        <method signature="ArtProductTest.updateArtProductTest()[pri:16, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="updateArtProductTest" class="TestCaseClasses.ArtProductTest"/>
        <method signature="ArtProductTest.deleteArtProductTest()[pri:17, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="deleteArtProductTest" class="TestCaseClasses.ArtProductTest"/>
        <method signature="EnquiryTest.addEnquiryTest()[pri:18, instance:TestCaseClasses.EnquiryTest@188715b5]" name="addEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquiryTest.unansweredEnquiryTest()[pri:19, instance:TestCaseClasses.EnquiryTest@188715b5]" name="unansweredEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquiryTest.answeredEnquiryTest()[pri:20, instance:TestCaseClasses.EnquiryTest@188715b5]" name="answeredEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquirySearchTest.enquirySearchByNameTest()[pri:21, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByNameTest" class="TestCaseClasses.EnquirySearchTest"/>
        <method signature="EnquirySearchTest.enquirySearchByEnquiryNumberTest()[pri:22, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByEnquiryNumberTest" class="TestCaseClasses.EnquirySearchTest"/>
        <method signature="EnquirySearchTest.enquirySearchByMobileNumberTest()[pri:23, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByMobileNumberTest" class="TestCaseClasses.EnquirySearchTest"/>
        <method signature="PagesTest.pagesMenuTestaboutus()[pri:24, instance:TestCaseClasses.PagesTest@6a192cfe]" name="pagesMenuTestaboutus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.updateAboutUsPageTestaboutus()[pri:25, instance:TestCaseClasses.PagesTest@6a192cfe]" name="updateAboutUsPageTestaboutus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.pagesMenuTestcontactus()[pri:26, instance:TestCaseClasses.PagesTest@6a192cfe]" name="pagesMenuTestcontactus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.updateContactUsPageTestContactUs()[pri:27, instance:TestCaseClasses.PagesTest@6a192cfe]" name="updateContactUsPageTestContactUs" class="TestCaseClasses.PagesTest"/>
      </group> <!-- admin -->
      <group name="smoketest">
        <method signature="ArtistTest.addArtistTest()[pri:6, instance:TestCaseClasses.ArtistTest@61df66b6]" name="addArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtistTest.deleteArtistTest()[pri:8, instance:TestCaseClasses.ArtistTest@61df66b6]" name="deleteArtistTest" class="TestCaseClasses.ArtistTest"/>
        <method signature="ArtMediumTest.addArtMediumTest()[pri:12, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="addArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtMediumTest.deleteArtMediumTest()[pri:14, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="deleteArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
      </group> <!-- smoketest -->
      <group name="login">
        <method signature="LoginTest.AdminLoginWithInValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" name="AdminLoginWithInValidDetails" class="TestCaseClasses.LoginTest"/>
        <method signature="LoginTest.AdminLoginWithValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" name="AdminLoginWithValidDetails" class="TestCaseClasses.LoginTest"/>
      </group> <!-- login -->
      <group name="artProduct">
        <method signature="ArtProductTest.addArtProductTest()[pri:15, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="addArtProductTest" class="TestCaseClasses.ArtProductTest"/>
        <method signature="ArtProductTest.updateArtProductTest()[pri:16, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="updateArtProductTest" class="TestCaseClasses.ArtProductTest"/>
        <method signature="ArtProductTest.deleteArtProductTest()[pri:17, instance:TestCaseClasses.ArtProductTest@2f7298b]" name="deleteArtProductTest" class="TestCaseClasses.ArtProductTest"/>
      </group> <!-- artProduct -->
      <group name="logout">
        <method signature="LogoutTest.AdminLogout()[pri:28, instance:TestCaseClasses.LogoutTest@5119fb47]" name="AdminLogout" class="TestCaseClasses.LogoutTest"/>
      </group> <!-- logout -->
      <group name="artMedium">
        <method signature="ArtMediumTest.addArtMediumTest()[pri:12, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="addArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtMediumTest.updateArtMediumTest()[pri:13, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="updateArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
        <method signature="ArtMediumTest.deleteArtMediumTest()[pri:14, instance:TestCaseClasses.ArtMediumTest@16ec5519]" name="deleteArtMediumTest" class="TestCaseClasses.ArtMediumTest"/>
      </group> <!-- artMedium -->
      <group name="pages">
        <method signature="PagesTest.pagesMenuTestaboutus()[pri:24, instance:TestCaseClasses.PagesTest@6a192cfe]" name="pagesMenuTestaboutus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.updateAboutUsPageTestaboutus()[pri:25, instance:TestCaseClasses.PagesTest@6a192cfe]" name="updateAboutUsPageTestaboutus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.pagesMenuTestcontactus()[pri:26, instance:TestCaseClasses.PagesTest@6a192cfe]" name="pagesMenuTestcontactus" class="TestCaseClasses.PagesTest"/>
        <method signature="PagesTest.updateContactUsPageTestContactUs()[pri:27, instance:TestCaseClasses.PagesTest@6a192cfe]" name="updateContactUsPageTestContactUs" class="TestCaseClasses.PagesTest"/>
      </group> <!-- pages -->
      <group name="regression">
        <method signature="userNavbarTest.home()[pri:29, instance:TestCaseClasses.userNavbarTest@7193666c]" name="home" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.about()[pri:30, instance:TestCaseClasses.userNavbarTest@7193666c]" name="about" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.arttype()[pri:31, instance:TestCaseClasses.userNavbarTest@7193666c]" name="arttype" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.contactus()[pri:32, instance:TestCaseClasses.userNavbarTest@7193666c]" name="contactus" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.admin()[pri:33, instance:TestCaseClasses.userNavbarTest@7193666c]" name="admin" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userDropdownTest.dropdown()[pri:34, instance:TestCaseClasses.userDropdownTest@20deea7f]" name="dropdown" class="TestCaseClasses.userDropdownTest"/>
        <method signature="userViewDetatilsTest.search()[pri:37, instance:TestCaseClasses.userViewDetatilsTest@7714e963]" name="search" class="TestCaseClasses.userViewDetatilsTest"/>
      </group> <!-- regression -->
      <group name="enquiry">
        <method signature="EnquiryTest.addEnquiryTest()[pri:18, instance:TestCaseClasses.EnquiryTest@188715b5]" name="addEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquiryTest.unansweredEnquiryTest()[pri:19, instance:TestCaseClasses.EnquiryTest@188715b5]" name="unansweredEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquiryTest.answeredEnquiryTest()[pri:20, instance:TestCaseClasses.EnquiryTest@188715b5]" name="answeredEnquiryTest" class="TestCaseClasses.EnquiryTest"/>
        <method signature="EnquirySearchTest.enquirySearchByNameTest()[pri:21, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByNameTest" class="TestCaseClasses.EnquirySearchTest"/>
        <method signature="EnquirySearchTest.enquirySearchByEnquiryNumberTest()[pri:22, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByEnquiryNumberTest" class="TestCaseClasses.EnquirySearchTest"/>
        <method signature="EnquirySearchTest.enquirySearchByMobileNumberTest()[pri:23, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" name="enquirySearchByMobileNumberTest" class="TestCaseClasses.EnquirySearchTest"/>
      </group> <!-- enquiry -->
      <group name="user">
        <method signature="userNavbarTest.home()[pri:29, instance:TestCaseClasses.userNavbarTest@7193666c]" name="home" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.about()[pri:30, instance:TestCaseClasses.userNavbarTest@7193666c]" name="about" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.arttype()[pri:31, instance:TestCaseClasses.userNavbarTest@7193666c]" name="arttype" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.contactus()[pri:32, instance:TestCaseClasses.userNavbarTest@7193666c]" name="contactus" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userNavbarTest.admin()[pri:33, instance:TestCaseClasses.userNavbarTest@7193666c]" name="admin" class="TestCaseClasses.userNavbarTest"/>
        <method signature="userDropdownTest.dropdown()[pri:34, instance:TestCaseClasses.userDropdownTest@20deea7f]" name="dropdown" class="TestCaseClasses.userDropdownTest"/>
        <method signature="userEnquiryTest.dropdown()[pri:35, instance:TestCaseClasses.userEnquiryTest@3835c46]" name="dropdown" class="TestCaseClasses.userEnquiryTest"/>
        <method signature="userLinksTest.linkcheck()[pri:36, instance:TestCaseClasses.userLinksTest@1dde4cb2]" name="linkcheck" class="TestCaseClasses.userLinksTest"/>
        <method signature="userViewDetatilsTest.search()[pri:37, instance:TestCaseClasses.userViewDetatilsTest@7714e963]" name="search" class="TestCaseClasses.userViewDetatilsTest"/>
        <method signature="userSearchTest.search()[pri:38, instance:TestCaseClasses.userSearchTest@20ce78ec]" name="search" class="TestCaseClasses.userSearchTest"/>
      </group> <!-- user -->
      <group name="dashboard">
        <method signature="DashboardDetailsTest.artistDetails()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artistDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artTypeDetails()[pri:1, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artTypeDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artMediumDetails()[pri:2, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artMediumDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.artProductDetails()[pri:3, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="artProductDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.AnsweredEnquiryDetails()[pri:4, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="AnsweredEnquiryDetails" class="TestCaseClasses.DashboardDetailsTest"/>
        <method signature="DashboardDetailsTest.UnansweredEnquiryDetails()[pri:5, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" name="UnansweredEnquiryDetails" class="TestCaseClasses.DashboardDetailsTest"/>
      </group> <!-- dashboard -->
    </groups>
    <test started-at="2023-07-15T19:15:26 IST" name="test" finished-at="2023-07-15T19:22:50 IST" duration-ms="444885">
      <class name="TestCaseClasses.ArtTypeTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:03 IST" name="artType" finished-at="2023-07-15T19:17:03 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:03 IST" name="beforeMethod" finished-at="2023-07-15T19:17:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtTypeTest.addArtTypeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addArtTypeTest()[pri:9, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:03 IST" name="addArtTypeTest" finished-at="2023-07-15T19:17:06 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addArtTypeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:06 IST" name="afterMethod" finished-at="2023-07-15T19:17:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addArtTypeTest status=SUCCESS method=ArtTypeTest.addArtTypeTest()[pri:9, instance:TestCaseClasses.ArtTypeTest@50eac852] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:06 IST" name="beforeMethod" finished-at="2023-07-15T19:17:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtTypeTest.updateArtTypeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateArtTypeTest()[pri:10, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:06 IST" name="updateArtTypeTest" finished-at="2023-07-15T19:17:16 IST" depends-on-methods="TestCaseClasses.ArtTypeTest.addArtTypeTest" duration-ms="10339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateArtTypeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:16 IST" name="afterMethod" finished-at="2023-07-15T19:17:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateArtTypeTest status=SUCCESS method=ArtTypeTest.updateArtTypeTest()[pri:10, instance:TestCaseClasses.ArtTypeTest@50eac852] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:16 IST" name="beforeMethod" finished-at="2023-07-15T19:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtTypeTest.deleteArtTypeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteArtTypeTest()[pri:11, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:16 IST" name="deleteArtTypeTest" finished-at="2023-07-15T19:17:21 IST" depends-on-methods="TestCaseClasses.ArtTypeTest.addArtTypeTest" duration-ms="5033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteArtTypeTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtTypeTest@50eac852]" started-at="2023-07-15T19:17:21 IST" name="afterMethod" finished-at="2023-07-15T19:17:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteArtTypeTest status=SUCCESS method=ArtTypeTest.deleteArtTypeTest()[pri:11, instance:TestCaseClasses.ArtTypeTest@50eac852] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.ArtTypeTest -->
      <class name="TestCaseClasses.userViewDetatilsTest">
        <test-method signature="search()[pri:37, instance:TestCaseClasses.userViewDetatilsTest@7714e963]" started-at="2023-07-15T19:21:40 IST" name="search" finished-at="2023-07-15T19:22:44 IST" duration-ms="64300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userViewDetatilsTest@7714e963]" started-at="2023-07-15T19:21:40 IST" name="beforeMethod" finished-at="2023-07-15T19:21:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userViewDetatilsTest.search()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userViewDetatilsTest@7714e963]" started-at="2023-07-15T19:22:44 IST" name="afterMethod" finished-at="2023-07-15T19:22:44 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=search status=SUCCESS method=userViewDetatilsTest.search()[pri:37, instance:TestCaseClasses.userViewDetatilsTest@7714e963] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userViewDetatilsTest -->
      <class name="TestCaseClasses.userLinksTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userLinksTest@1dde4cb2]" started-at="2023-07-15T19:21:24 IST" name="beforeMethod" finished-at="2023-07-15T19:21:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userLinksTest.linkcheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="linkcheck()[pri:36, instance:TestCaseClasses.userLinksTest@1dde4cb2]" started-at="2023-07-15T19:21:24 IST" name="linkcheck" finished-at="2023-07-15T19:21:40 IST" duration-ms="15874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkcheck -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userLinksTest@1dde4cb2]" started-at="2023-07-15T19:21:40 IST" name="afterMethod" finished-at="2023-07-15T19:21:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=linkcheck status=SUCCESS method=userLinksTest.linkcheck()[pri:36, instance:TestCaseClasses.userLinksTest@1dde4cb2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userLinksTest -->
      <class name="TestCaseClasses.EnquiryTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:29 IST" name="beforeMethod" finished-at="2023-07-15T19:18:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquiryTest.addEnquiryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addEnquiryTest()[pri:18, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:29 IST" name="addEnquiryTest" finished-at="2023-07-15T19:18:39 IST" duration-ms="10206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEnquiryTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:39 IST" name="afterMethod" finished-at="2023-07-15T19:18:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addEnquiryTest status=SUCCESS method=EnquiryTest.addEnquiryTest()[pri:18, instance:TestCaseClasses.EnquiryTest@188715b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:39 IST" name="beforeMethod" finished-at="2023-07-15T19:18:39 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquiryTest.unansweredEnquiryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="unansweredEnquiryTest()[pri:19, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:39 IST" name="unansweredEnquiryTest" finished-at="2023-07-15T19:18:43 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="3876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unansweredEnquiryTest -->
        <test-method signature="answeredEnquiryTest()[pri:20, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:43 IST" name="answeredEnquiryTest" finished-at="2023-07-15T19:18:50 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="6808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- answeredEnquiryTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:43 IST" name="beforeMethod" finished-at="2023-07-15T19:18:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquiryTest.answeredEnquiryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:43 IST" name="afterMethod" finished-at="2023-07-15T19:18:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unansweredEnquiryTest status=SUCCESS method=EnquiryTest.unansweredEnquiryTest()[pri:19, instance:TestCaseClasses.EnquiryTest@188715b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquiryTest@188715b5]" started-at="2023-07-15T19:18:50 IST" name="afterMethod" finished-at="2023-07-15T19:18:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=answeredEnquiryTest status=SUCCESS method=EnquiryTest.answeredEnquiryTest()[pri:20, instance:TestCaseClasses.EnquiryTest@188715b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.EnquiryTest -->
      <class name="TestCaseClasses.ArtProductTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:41 IST" name="artType" finished-at="2023-07-15T19:17:41 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:41 IST" name="beforeMethod" finished-at="2023-07-15T19:17:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtProductTest.addArtProductTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addArtProductTest()[pri:15, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:41 IST" name="addArtProductTest" finished-at="2023-07-15T19:17:53 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="11827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addArtProductTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:53 IST" name="afterMethod" finished-at="2023-07-15T19:17:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addArtProductTest status=SUCCESS method=ArtProductTest.addArtProductTest()[pri:15, instance:TestCaseClasses.ArtProductTest@2f7298b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:53 IST" name="beforeMethod" finished-at="2023-07-15T19:17:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtProductTest.updateArtProductTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateArtProductTest()[pri:16, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:17:53 IST" name="updateArtProductTest" finished-at="2023-07-15T19:18:23 IST" depends-on-methods="TestCaseClasses.ArtProductTest.addArtProductTest" duration-ms="30000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateArtProductTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:18:23 IST" name="afterMethod" finished-at="2023-07-15T19:18:23 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateArtProductTest status=SUCCESS method=ArtProductTest.updateArtProductTest()[pri:16, instance:TestCaseClasses.ArtProductTest@2f7298b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:18:23 IST" name="beforeMethod" finished-at="2023-07-15T19:18:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtProductTest.deleteArtProductTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteArtProductTest()[pri:17, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:18:23 IST" name="deleteArtProductTest" finished-at="2023-07-15T19:18:29 IST" depends-on-methods="TestCaseClasses.ArtProductTest.addArtProductTest" duration-ms="5802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteArtProductTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtProductTest@2f7298b]" started-at="2023-07-15T19:18:29 IST" name="afterMethod" finished-at="2023-07-15T19:18:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteArtProductTest status=SUCCESS method=ArtProductTest.deleteArtProductTest()[pri:17, instance:TestCaseClasses.ArtProductTest@2f7298b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.ArtProductTest -->
      <class name="TestCaseClasses.userSearchTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userSearchTest@20ce78ec]" started-at="2023-07-15T19:22:44 IST" name="beforeMethod" finished-at="2023-07-15T19:22:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userSearchTest.search()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="search()[pri:38, instance:TestCaseClasses.userSearchTest@20ce78ec]" started-at="2023-07-15T19:22:44 IST" name="search" finished-at="2023-07-15T19:22:50 IST" duration-ms="6541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userSearchTest@20ce78ec]" started-at="2023-07-15T19:22:50 IST" name="afterMethod" finished-at="2023-07-15T19:22:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=search status=SUCCESS method=userSearchTest.search()[pri:38, instance:TestCaseClasses.userSearchTest@20ce78ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userSearchTest -->
      <class name="TestCaseClasses.userDropdownTest">
        <test-method signature="dropdown()[pri:34, instance:TestCaseClasses.userDropdownTest@20deea7f]" started-at="2023-07-15T19:19:40 IST" name="dropdown" finished-at="2023-07-15T19:20:06 IST" duration-ms="26603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropdown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userDropdownTest@20deea7f]" started-at="2023-07-15T19:19:40 IST" name="beforeMethod" finished-at="2023-07-15T19:19:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userDropdownTest.dropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userDropdownTest@20deea7f]" started-at="2023-07-15T19:20:06 IST" name="afterMethod" finished-at="2023-07-15T19:20:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropdown status=SUCCESS method=userDropdownTest.dropdown()[pri:34, instance:TestCaseClasses.userDropdownTest@20deea7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userDropdownTest -->
      <class name="TestCaseClasses.EnquirySearchTest">
        <test-method is-config="true" signature="fetchData()[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:50 IST" name="fetchData" finished-at="2023-07-15T19:18:55 IST" duration-ms="5086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchData -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:55 IST" name="beforeMethod" finished-at="2023-07-15T19:18:55 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquirySearchTest.enquirySearchByNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enquirySearchByNameTest()[pri:21, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:55 IST" name="enquirySearchByNameTest" finished-at="2023-07-15T19:18:58 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="2935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enquirySearchByNameTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:58 IST" name="afterMethod" finished-at="2023-07-15T19:18:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enquirySearchByNameTest status=SUCCESS method=EnquirySearchTest.enquirySearchByNameTest()[pri:21, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="enquirySearchByEnquiryNumberTest()[pri:22, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:58 IST" name="enquirySearchByEnquiryNumberTest" finished-at="2023-07-15T19:18:59 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="1578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enquirySearchByEnquiryNumberTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:58 IST" name="beforeMethod" finished-at="2023-07-15T19:18:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquirySearchTest.enquirySearchByEnquiryNumberTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:59 IST" name="afterMethod" finished-at="2023-07-15T19:18:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enquirySearchByEnquiryNumberTest status=SUCCESS method=EnquirySearchTest.enquirySearchByEnquiryNumberTest()[pri:22, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:59 IST" name="beforeMethod" finished-at="2023-07-15T19:18:59 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.EnquirySearchTest.enquirySearchByMobileNumberTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enquirySearchByMobileNumberTest()[pri:23, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:18:59 IST" name="enquirySearchByMobileNumberTest" finished-at="2023-07-15T19:19:02 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="2334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enquirySearchByMobileNumberTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af]" started-at="2023-07-15T19:19:02 IST" name="afterMethod" finished-at="2023-07-15T19:19:02 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enquirySearchByMobileNumberTest status=SUCCESS method=EnquirySearchTest.enquirySearchByMobileNumberTest()[pri:23, instance:TestCaseClasses.EnquirySearchTest@1ea9f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.EnquirySearchTest -->
      <class name="TestCaseClasses.userNavbarTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:33 IST" name="beforeMethod" finished-at="2023-07-15T19:19:33 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userNavbarTest.home()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="home()[pri:29, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:33 IST" name="home" finished-at="2023-07-15T19:19:35 IST" duration-ms="1986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- home -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:35 IST" name="afterMethod" finished-at="2023-07-15T19:19:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=home status=SUCCESS method=userNavbarTest.home()[pri:29, instance:TestCaseClasses.userNavbarTest@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:35 IST" name="beforeMethod" finished-at="2023-07-15T19:19:35 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userNavbarTest.about()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="about()[pri:30, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:35 IST" name="about" finished-at="2023-07-15T19:19:36 IST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- about -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:36 IST" name="afterMethod" finished-at="2023-07-15T19:19:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=about status=SUCCESS method=userNavbarTest.about()[pri:30, instance:TestCaseClasses.userNavbarTest@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:36 IST" name="beforeMethod" finished-at="2023-07-15T19:19:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userNavbarTest.arttype()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="arttype()[pri:31, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:36 IST" name="arttype" finished-at="2023-07-15T19:19:37 IST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arttype -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="afterMethod" finished-at="2023-07-15T19:19:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=arttype status=SUCCESS method=userNavbarTest.arttype()[pri:31, instance:TestCaseClasses.userNavbarTest@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="beforeMethod" finished-at="2023-07-15T19:19:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userNavbarTest.contactus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="contactus()[pri:32, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="contactus" finished-at="2023-07-15T19:19:37 IST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="afterMethod" finished-at="2023-07-15T19:19:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactus status=SUCCESS method=userNavbarTest.contactus()[pri:32, instance:TestCaseClasses.userNavbarTest@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="beforeMethod" finished-at="2023-07-15T19:19:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userNavbarTest.admin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="admin()[pri:33, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:37 IST" name="admin" finished-at="2023-07-15T19:19:40 IST" duration-ms="2337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- admin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userNavbarTest@7193666c]" started-at="2023-07-15T19:19:40 IST" name="afterMethod" finished-at="2023-07-15T19:19:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=admin status=SUCCESS method=userNavbarTest.admin()[pri:33, instance:TestCaseClasses.userNavbarTest@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userNavbarTest -->
      <class name="TestCaseClasses.ArtistTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:41 IST" name="artType" finished-at="2023-07-15T19:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:41 IST" name="beforeMethod" finished-at="2023-07-15T19:16:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtistTest.addArtistTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addArtistTest()[pri:6, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:41 IST" name="addArtistTest" finished-at="2023-07-15T19:16:46 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="5304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addArtistTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:46 IST" name="afterMethod" finished-at="2023-07-15T19:16:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addArtistTest status=SUCCESS method=ArtistTest.addArtistTest()[pri:6, instance:TestCaseClasses.ArtistTest@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:46 IST" name="beforeMethod" finished-at="2023-07-15T19:16:46 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtistTest.updateArtistTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateArtistTest()[pri:7, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:46 IST" name="updateArtistTest" finished-at="2023-07-15T19:16:58 IST" depends-on-methods="TestCaseClasses.ArtistTest.addArtistTest" duration-ms="11969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateArtistTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:58 IST" name="afterMethod" finished-at="2023-07-15T19:16:58 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateArtistTest status=SUCCESS method=ArtistTest.updateArtistTest()[pri:7, instance:TestCaseClasses.ArtistTest@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:58 IST" name="beforeMethod" finished-at="2023-07-15T19:16:58 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtistTest.deleteArtistTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteArtistTest()[pri:8, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:16:58 IST" name="deleteArtistTest" finished-at="2023-07-15T19:17:03 IST" depends-on-methods="TestCaseClasses.ArtistTest.addArtistTest" duration-ms="4658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteArtistTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtistTest@61df66b6]" started-at="2023-07-15T19:17:03 IST" name="afterMethod" finished-at="2023-07-15T19:17:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteArtistTest status=SUCCESS method=ArtistTest.deleteArtistTest()[pri:8, instance:TestCaseClasses.ArtistTest@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.ArtistTest -->
      <class name="TestCaseClasses.LogoutTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.LogoutTest@5119fb47]" started-at="2023-07-15T19:19:24 IST" name="beforeMethod" finished-at="2023-07-15T19:19:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.LogoutTest.AdminLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="AdminLogout()[pri:28, instance:TestCaseClasses.LogoutTest@5119fb47]" started-at="2023-07-15T19:19:24 IST" name="AdminLogout" finished-at="2023-07-15T19:19:33 IST" duration-ms="9151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminLogout -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.LogoutTest@5119fb47]" started-at="2023-07-15T19:19:33 IST" name="afterMethod" finished-at="2023-07-15T19:19:33 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdminLogout status=SUCCESS method=LogoutTest.AdminLogout()[pri:28, instance:TestCaseClasses.LogoutTest@5119fb47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.LogoutTest -->
      <class name="TestCaseClasses.ArtMediumTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:21 IST" name="artType" finished-at="2023-07-15T19:17:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:21 IST" name="beforeMethod" finished-at="2023-07-15T19:17:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtMediumTest.addArtMediumTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addArtMediumTest()[pri:12, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:21 IST" name="addArtMediumTest" finished-at="2023-07-15T19:17:25 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="3666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addArtMediumTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:25 IST" name="afterMethod" finished-at="2023-07-15T19:17:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addArtMediumTest status=SUCCESS method=ArtMediumTest.addArtMediumTest()[pri:12, instance:TestCaseClasses.ArtMediumTest@16ec5519] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:25 IST" name="beforeMethod" finished-at="2023-07-15T19:17:25 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtMediumTest.updateArtMediumTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateArtMediumTest()[pri:13, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:25 IST" name="updateArtMediumTest" finished-at="2023-07-15T19:17:36 IST" depends-on-methods="TestCaseClasses.ArtMediumTest.addArtMediumTest" duration-ms="10763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateArtMediumTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:36 IST" name="afterMethod" finished-at="2023-07-15T19:17:36 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateArtMediumTest status=SUCCESS method=ArtMediumTest.updateArtMediumTest()[pri:13, instance:TestCaseClasses.ArtMediumTest@16ec5519] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:36 IST" name="beforeMethod" finished-at="2023-07-15T19:17:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.ArtMediumTest.deleteArtMediumTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteArtMediumTest()[pri:14, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:36 IST" name="deleteArtMediumTest" finished-at="2023-07-15T19:17:41 IST" depends-on-methods="TestCaseClasses.ArtMediumTest.addArtMediumTest" duration-ms="5545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteArtMediumTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.ArtMediumTest@16ec5519]" started-at="2023-07-15T19:17:41 IST" name="afterMethod" finished-at="2023-07-15T19:17:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteArtMediumTest status=SUCCESS method=ArtMediumTest.deleteArtMediumTest()[pri:14, instance:TestCaseClasses.ArtMediumTest@16ec5519] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.ArtMediumTest -->
      <class name="TestCaseClasses.LoginTest">
        <test-method is-config="true" signature="setupTest()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:14:23 IST" name="setupTest" finished-at="2023-07-15T19:15:26 IST" duration-ms="62721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:26 IST" name="beforeMethod" finished-at="2023-07-15T19:15:26 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.LoginTest.AdminLoginWithInValidDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="AdminLoginWithInValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:26 IST" name="AdminLoginWithInValidDetails" finished-at="2023-07-15T19:15:48 IST" duration-ms="22427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminLoginWithInValidDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:48 IST" name="afterMethod" finished-at="2023-07-15T19:15:48 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdminLoginWithInValidDetails status=SUCCESS method=LoginTest.AdminLoginWithInValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="AdminLoginWithValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:49 IST" name="AdminLoginWithValidDetails" finished-at="2023-07-15T19:15:53 IST" depends-on-methods="TestCaseClasses.LoginTest.AdminLoginWithInValidDetails" duration-ms="4208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminLoginWithValidDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:49 IST" name="beforeMethod" finished-at="2023-07-15T19:15:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.LoginTest.AdminLoginWithValidDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:15:53 IST" name="afterMethod" finished-at="2023-07-15T19:15:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdminLoginWithValidDetails status=SUCCESS method=LoginTest.AdminLoginWithValidDetails()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCaseClasses.LoginTest@4facf68f]" started-at="2023-07-15T19:22:51 IST" name="tearDown" finished-at="2023-07-15T19:22:54 IST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCaseClasses.LoginTest -->
      <class name="TestCaseClasses.userEnquiryTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.userEnquiryTest@3835c46]" started-at="2023-07-15T19:20:06 IST" name="beforeMethod" finished-at="2023-07-15T19:20:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.userEnquiryTest.dropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dropdown()[pri:35, instance:TestCaseClasses.userEnquiryTest@3835c46]" started-at="2023-07-15T19:20:06 IST" name="dropdown" finished-at="2023-07-15T19:21:24 IST" duration-ms="77536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropdown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.userEnquiryTest@3835c46]" started-at="2023-07-15T19:21:24 IST" name="afterMethod" finished-at="2023-07-15T19:21:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropdown status=SUCCESS method=userEnquiryTest.dropdown()[pri:35, instance:TestCaseClasses.userEnquiryTest@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.userEnquiryTest -->
      <class name="TestCaseClasses.PagesTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="artType" finished-at="2023-07-15T19:19:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="beforeMethod" finished-at="2023-07-15T19:19:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.PagesTest.pagesMenuTestaboutus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="pagesMenuTestaboutus()[pri:24, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="pagesMenuTestaboutus" finished-at="2023-07-15T19:19:02 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pagesMenuTestaboutus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="afterMethod" finished-at="2023-07-15T19:19:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=pagesMenuTestaboutus status=SUCCESS method=PagesTest.pagesMenuTestaboutus()[pri:24, instance:TestCaseClasses.PagesTest@6a192cfe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="beforeMethod" finished-at="2023-07-15T19:19:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.PagesTest.updateAboutUsPageTestaboutus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateAboutUsPageTestaboutus()[pri:25, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:02 IST" name="updateAboutUsPageTestaboutus" finished-at="2023-07-15T19:19:23 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="21215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAboutUsPageTestaboutus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:23 IST" name="afterMethod" finished-at="2023-07-15T19:19:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateAboutUsPageTestaboutus status=SUCCESS method=PagesTest.updateAboutUsPageTestaboutus()[pri:25, instance:TestCaseClasses.PagesTest@6a192cfe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:23 IST" name="beforeMethod" finished-at="2023-07-15T19:19:23 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.PagesTest.pagesMenuTestcontactus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="pagesMenuTestcontactus()[pri:26, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:23 IST" name="pagesMenuTestcontactus" finished-at="2023-07-15T19:19:24 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pagesMenuTestcontactus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:24 IST" name="afterMethod" finished-at="2023-07-15T19:19:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=pagesMenuTestcontactus status=SUCCESS method=PagesTest.pagesMenuTestcontactus()[pri:26, instance:TestCaseClasses.PagesTest@6a192cfe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:24 IST" name="beforeMethod" finished-at="2023-07-15T19:19:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.PagesTest.updateContactUsPageTestContactUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateContactUsPageTestContactUs()[pri:27, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:24 IST" name="updateContactUsPageTestContactUs" finished-at="2023-07-15T19:19:24 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="586" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='pagetitle']"}
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Anuj', ip: '192.168.43.189', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\Mypc\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53833}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 10f3cc7b7074423fc1c865f4df7467fc
*** Element info: {Using=name, value=pagetitle}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='pagetitle']"}
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Anuj', ip: '192.168.43.189', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\Mypc\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53833}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 10f3cc7b7074423fc1c865f4df7467fc
*** Element info: {Using=name, value=pagetitle}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:404)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at ObjectClasses.ContactUs.fillPagedetails(ContactUs.java:40)
at ObjectClasses.ContactUs.updateContactUsPage(ContactUs.java:114)
at TestCaseClasses.PagesTest.updateContactUsPageTestContactUs(PagesTest.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateContactUsPageTestContactUs -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.PagesTest@6a192cfe]" started-at="2023-07-15T19:19:24 IST" name="afterMethod" finished-at="2023-07-15T19:19:24 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateContactUsPageTestContactUs status=FAILURE method=PagesTest.updateContactUsPageTestContactUs()[pri:27, instance:TestCaseClasses.PagesTest@6a192cfe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.PagesTest -->
      <class name="TestCaseClasses.DashboardDetailsTest">
        <test-method is-config="true" signature="artType()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:53 IST" name="artType" finished-at="2023-07-15T19:15:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:53 IST" name="beforeMethod" finished-at="2023-07-15T19:15:53 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.artistDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="artistDetails()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:53 IST" name="artistDetails" finished-at="2023-07-15T19:15:58 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="4782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artistDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:58 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:15:59 IST" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:59 IST" name="beforeMethod" finished-at="2023-07-15T19:15:59 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.artTypeDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:59 IST" name="afterMethod" finished-at="2023-07-15T19:15:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=artistDetails status=SUCCESS method=DashboardDetailsTest.artistDetails()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="artTypeDetails()[pri:1, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:15:59 IST" name="artTypeDetails" finished-at="2023-07-15T19:16:01 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="2236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artTypeDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:01 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:16:05 IST" duration-ms="3786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:05 IST" name="afterMethod" finished-at="2023-07-15T19:16:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=artTypeDetails status=SUCCESS method=DashboardDetailsTest.artTypeDetails()[pri:1, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:05 IST" name="beforeMethod" finished-at="2023-07-15T19:16:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.artMediumDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="artMediumDetails()[pri:2, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:05 IST" name="artMediumDetails" finished-at="2023-07-15T19:16:07 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="2526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artMediumDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:07 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:16:08 IST" duration-ms="879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:08 IST" name="afterMethod" finished-at="2023-07-15T19:16:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=artMediumDetails status=SUCCESS method=DashboardDetailsTest.artMediumDetails()[pri:2, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:08 IST" name="beforeMethod" finished-at="2023-07-15T19:16:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.artProductDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="artProductDetails()[pri:3, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:08 IST" name="artProductDetails" finished-at="2023-07-15T19:16:11 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="2906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- artProductDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:11 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:16:12 IST" duration-ms="1110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:12 IST" name="afterMethod" finished-at="2023-07-15T19:16:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=artProductDetails status=SUCCESS method=DashboardDetailsTest.artProductDetails()[pri:3, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:12 IST" name="beforeMethod" finished-at="2023-07-15T19:16:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.AnsweredEnquiryDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="AnsweredEnquiryDetails()[pri:4, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:12 IST" name="AnsweredEnquiryDetails" finished-at="2023-07-15T19:16:33 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="21169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AnsweredEnquiryDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:33 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:16:34 IST" duration-ms="1178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:34 IST" name="afterMethod" finished-at="2023-07-15T19:16:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AnsweredEnquiryDetails status=SUCCESS method=DashboardDetailsTest.AnsweredEnquiryDetails()[pri:4, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:34 IST" name="beforeMethod" finished-at="2023-07-15T19:16:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCaseClasses.DashboardDetailsTest.UnansweredEnquiryDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="UnansweredEnquiryDetails()[pri:5, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:34 IST" name="UnansweredEnquiryDetails" finished-at="2023-07-15T19:16:40 IST" depends-on-methods="AdminLoginWithValidDetails" duration-ms="5538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnansweredEnquiryDetails -->
        <test-method is-config="true" signature="driverNavigateBackward()[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:40 IST" name="driverNavigateBackward" finished-at="2023-07-15T19:16:41 IST" duration-ms="855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverNavigateBackward -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCaseClasses.DashboardDetailsTest@72f926e6]" started-at="2023-07-15T19:16:41 IST" name="afterMethod" finished-at="2023-07-15T19:16:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UnansweredEnquiryDetails status=SUCCESS method=DashboardDetailsTest.UnansweredEnquiryDetails()[pri:5, instance:TestCaseClasses.DashboardDetailsTest@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCaseClasses.DashboardDetailsTest -->
    </test> <!-- test -->
  </suite> <!-- Art Gallery Testing -->
</testng-results>
